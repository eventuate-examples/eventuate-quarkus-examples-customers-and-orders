import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id "io.quarkus" version "${quarkusVersion}"
    id 'org.kordamp.gradle.jandex' version '0.6.0'
}

apply plugin: 'docker-compose'

dockerCompose.isRequiredBy(test)

dockerCompose {
    environment.put "EVENTUATE_JAVA_BASE_IMAGE_VERSION", eventuateExamplesBaseImageVersion

    if ("mssql".equals(System.getenv("EVENTUATEDATABASE")))
        useComposeFiles = ['docker-compose-integration-tests-eventuate-local-mssql-polling.yml']
    else if ("postgresql".equals(System.getenv("EVENTUATEDATABASE")))
        useComposeFiles = ['docker-compose-integration-tests-eventuate-local-postgres-wal.yml']
    else
        useComposeFiles = ['docker-compose-integration-tests-eventuate-local-mysql.yml']
}

dependencies {
    compile project(":orders-common")

    compile "io.eventuate.local.java:eventuate-client-java-quarkus"
    compile "io.eventuate.local.java:eventuate-local-java-quarkus-jdbc"
    compile "io.eventuate.common:eventuate-common-quarkus-jdbc:$eventuateCommonQuarkusVersion"

    compile 'io.quarkus:quarkus-core'
    compile 'io.quarkus.arc:arc'
    compile 'io.quarkus:quarkus-arc-deployment'
    compile 'io.quarkus:quarkus-smallrye-health'
    compile 'io.quarkus:quarkus-smallrye-openapi'
    compile 'io.quarkus:quarkus-resteasy-jackson'

    compile 'io.quarkus:quarkus-jdbc-mysql'
    compile 'io.quarkus:quarkus-jdbc-mssql'
    compile 'io.quarkus:quarkus-jdbc-postgresql'

    compile 'io.quarkus:quarkus-rest-client'
    compile 'io.quarkus:quarkus-resteasy-jackson'

    compile project(":customers-common")

    testCompile "io.eventuate.common:eventuate-common-quarkus-jdbc-test-configuration:$eventuateCommonQuarkusVersion"

    testCompile 'org.mockito:mockito-all:1.10.19'
    testCompile "io.eventuate.local.java:eventuate-client-java-quarkus-jdbc"
    testCompile 'io.quarkus:quarkus-junit5'
}

test {
    useJUnitPlatform()
}

processResources {
    outputs.upToDateWhen { false }
    filter ReplaceTokens, tokens: ["EVENTUATEDATABASE": System.env.EVENTUATEDATABASE ?: "mysql"]
}
